// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// prisma/schema.prisma

enum Status {
  ACTIVE
  INACTIVE
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String
  name      String?
  lastName  String?
  email     String?
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    Status   @default(INACTIVE)

  @@index([username])
}

model TadDireccion {
  id        String   @id @default(uuid())
  ciudad    String
  estado    Estado   @relation(fields: [estadoId], references: [id])
  estadoId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    Status   @default(ACTIVE)
}

model Estado {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    Status   @default(ACTIVE)

  TadDireccion TadDireccion[]
}

model ClaveConcentradora {
  id        String   @id @default(uuid())
  clave     BigInt
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    Status   @default(ACTIVE)
}

model RazonSocialComercial {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    Status   @default(ACTIVE)
}

model Producto {
  id          String   @id @default(uuid())
  clave       BigInt
  descripcion String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  status      Status   @default(ACTIVE)
}
